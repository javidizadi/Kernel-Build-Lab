# This is a basic workflow to help you get started with Actions

name: build kernel

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VERSION: linux-5.19-rc5
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: install required packages for building kernel
        run: sudo apt install git tar fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison -y

      - name: Download ${{ env.VERSION }} tarball
        run: curl -s -L -o ./${{ env.VERSION }}.tar.gz https://git.kernel.org/torvalds/t/${{ env.VERSION }}.tar.gz

      - name: Extract tarball and go to kernel source
        run: tar zxf ${{ env.VERSION }}.tar.gz

      - name: Get .config file
        run: curl -s -L -o ./${{ env.VERSION }}/.config https://raw.githubusercontent.com/${{ github.repository }}/master/.config

      - name: Compile kernel
        run: make ARCH=x86_64 -j`nproc` -C ./${{ env.VERSION }}

      - name: Compile modules
        run: make ARCH=x86_64 -j`nproc` -C ./${{ env.VERSION }} modules

      - name: Compile bzImage
        run: make ARCH=x86_64 -j`nproc` -C ./${{ env.VERSION }} bzImage

      - name: Show Disk Usage of kernel source directory
        run: du -sh ./${{ env.VERSION }}

      - name: Show Usage of Drivers directory in kernel source
        run: du -sh ./${{ env.VERSION }}/drivers

      # - name: Create Compressed tar file from Kernel Source directory
      #   run: |
      #     tar -cf ${{ env.VERSION }}-compiled-amd64.tar ./${{ env.VERSION }}
      #     gzip ${{ env.VERSION }}-compiled-amd64.tar

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ./${{ env.VERSION }}-compiled-amd64.tar.gz
          asset_name: ${{ env.VERSION }}-compiled-amd64.tar.gz
          tag: ${{ env.VERSION }}
          overwrite: true
          body: "Compiled ${{ env.VERSION }} Kernel Source With Default config AMD64 CPU ARCH"
